;(function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require=="function"&&require;if(!s&&o)return o(n,!0);if(r)return r(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=t[n]={exports:{}};e[n][0](function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require=="function"&&require;for(var s=0;s<n.length;s++)i(n[s]);return i})({1:[function(require,module,exports){
// domready
$( document ).ready(function(){
    // Observable = require('./helper').Observable.call(); // event systsem

    var navbars = require('./components/navbars');
    var albumComponent = require('./components/album');
    var settings = require('./settings'); // load settings
    // router.init();
    // m.route.mode = "hash";
    // m.route(document.getElementsByClassName('main-container')[0] , '/', router.routes);
    // m.route('/')
    // var ss = {
    //     view: function(){
    //         return m('rr',{config:function(el,isInit,context){
    //             console.log('rr,', el,isInit,context)
    //         }})
    //     }
    // }
    // m.mount(document.getElementsByTagName('header')[0],ss);
    // m.computati start
    var router = require('./router');
    m.mount(document.getElementsByTagName('header')[0], navbars);

    // m.mount($('footer')[0],albumComponent);

    // router.init();


    //initialize
    // m.mount(document.getElementsByTagName('header')[0], Demo);

});

},{"./components/album":2,"./settings":3,"./components/navbars":4,"./router":5}],3:[function(require,module,exports){
var app = {};


app.appId = "";

app.pageId = "";

app.url = "";

app.loginRedirectRoute = "/fbLogin"

module.exports = app;

},{}],4:[function(require,module,exports){
// Header component
var sideLinks = [
    {title: "Home", url: "#/"},
    {title: "Albums", url: "#/albums"},
    {title: "Documentation", url: "#/doc"},
    {title: "About", url: "#/about"},
    {title: "gett2", url: "#/album/2"},
];
// m("li", {class: selected ? "active" : ""})
module.exports = {
    controller: function() {
        m.redraw.strategy("diff");
    },
    view: function(ctrl) {
        // console.log('dont')
        // m.redraw.strategy("none");
        return m('nav', {config: navConf}, m('.nav-wrapper', [
            m('a', { href: '#!', class: 'brand-logo center' }, 'logo'),

            m('a', { href: '#', class: 'button-collapse', 'data-activates': 'mobile-demo' }, m('i', { class: 'material-icon' }, 'menu') ),

            m('ul', { class: 'right hide-on-med-and-down'}, [
                m('li', m('a',{ href: '#/tobe' }) )
            ]),

            m('ul#mobile-demo', { class: 'side-nav fixed'},[
                sideLinks.map(function(link) {
                    return m('li', m('a', {href: link.url}, link.title));
                })
            ])
        ]));
    }
}

var navConf = function(element, isInitialized, context) {
    if (!isInitialized) {
        $('.button-collapse').sideNav({
            'edge': 'left',
            // closeOnClick: true
        });
    }


};

},{}],2:[function(require,module,exports){
var progressLoader = require('../components/progressLoader');

module.exports = {
    //the Todo class has two properties

    controller: function(args) {
        args = args || {};
        var ctrl = this;
        ctrl.album = m.prop({});
        ctrl.imgs = m.prop([]);
        // ctrl.modalOpen = m.prop(false);
        ctrl.error = m.prop('');

        ctrl.id = args.id;
        // m.redraw.strategy("none");

        ctrl.openAlbum = function(id){
            // $('.album-modal').openModal();
            // ctrl.modalOpen(true);
            // m.redraw(true);
            // console.log('in redraw')
            console.log('leng',ctrl.imgs().length);
            // request
            Promise.delay(1000).then(function(){
                return {
                    imgs: [
                        {src:'kk.img'}
                    ],
                    name: 'bleejee'
                };
            }).then(function(data){
                // set album variable
                return data.imgs
            }).then(ctrl.imgs)//  set as img
            .then(function(images){
                // console.log(images)
                if(!images.length)
                    ctrl.error( 'No images were found');
                // console.log('leng',ctrl.imgs().length);
                console.log('redraw')
            }).then(m.redraw);
        }
        // ctrl.onunload = function(){
        //     Observable.off(ctrl.openAlbum) // stop listening
        //     console.log('unloading')
        // }
        // if(!args) return ctrl.error(' No Id Specified');

        // return {}
        ctrl.openAlbum(ctrl.id)

    },
    view: function(ctrl,args) {
        // loading
        console.log('state change',ctrl);
        // console.log($('.album-modal').html())
        return m('.album-modal', {class: "modal modal-fixed-footer", config:modalOpen}, [
            m('.modal-content',[
                m('h4',"Modal Header"),
                m('p',"A bunch of text"),
                m('p',ctrl.id),
                function checkState(){
                    console.log('stt',ctrl.error())
                    // console.log('state',ctrl.error)
                    if (ctrl.error()) return errorView(ctrl.error);
                    // image view
                    else if (ctrl.imgs().length) return imgsView(ctrl.imgs);
                    // animated progress icon
                    else return m.component( progressLoader, {id: 'album-load-progress'} );
                }(),
            ]),
            m('.modal-footer',[
                m('button',{class: "modal-action modal-close waves-effect waves-green btn-flat"}, "Agree")
            ])
        ]);
    }
};
// // seperate thumbTocomponent
//
var imgsView = function(images){
    // console.log('image view',images());
    // row col 3
    // each thumb - desc, like count, like btn
    // config to top fade in
    // config hide then fade in slow
    return m('h1','images');
}
var modalOpen = function(element, isInitialized, context) {
        // console.log('open modal',canOpen(),element, isInitialized, context)
    if (!isInitialized) {
      // use different modal library
      // remove all events listeneing
    //   Observable.off(["openAlbumModal"],openModal.bind(null,element));
    //   Observable.on(["openAlbumModal"],openModal.bind(null,element));
    console.log('opened')

        $(element).openModal();
      function openModal(el){
      }
        // console.log('open',element,context)
    }
    // $('.album-modal').closeModal();
};
// // row columns
// var imageCard = function(){
//     return
//
//
//
// }
var errorView = function(error){
    return m('h2', error)
}

},{"../components/progressLoader":6}],5:[function(require,module,exports){
var splashPage = require('./pages/splash');
var albumsPage = require('./pages/albums');

var settings = require('./settings');


// hack for fb Redirect urls
// checks if url is a fb redirect url
// if not return
// if fb url found convert to hash route url
function checkForFbRedirectUrl(location){
    var hash = location.hash;
    var currSite = location.origin;

    var isFbUrl = location.href.indexOf(currSite + '/?#') == 0; // if this is the first substring in the url

    // console.log(isFbUrl,currSite,hash)

    if(!isFbUrl) return;

    if(hash[0] == "#") hash = hash.substr(1); // remove first hash

    var hashArr = hash.split('&');

    // split hash to array of objects
    hashArr = hashArr.map(function(hashItem){
        var itemSplit = hashItem.split('=');
        return {
            key: itemSplit[0],
            value: itemSplit[1]
        }
    });

    // console.log(hashArr);

    // generate output url

    var URL = currSite + '/#'; // hash for hash routing
    URL += settings.loginRedirectRoute;

    hashArr.forEach(function(item){
        var urlParam = '/' + item.key + '/' + item.value;
        URL += urlParam;
    });


    return URL;
}

var parsedUrl = checkForFbRedirectUrl(window.location)
if (parsedUrl) return window.location.replace(parsedUrl); // if found change route


m.route.mode = "hash";
m.route( $('main')[0], '/', {
    // fb routes
    '/fbLogin/access_token/:accToken/expires_in/:exp/code/:code' : splashPage,
    // error route
    '/fbLogin/error_reason/:errorReason/error/:error/error_description/:errorDesc' : splashPage,


    '/' : splashPage,


    '/albums' : albumsPage,
    '/album/:id' : albumsPage,
    // '/about': function(){}
});


// another router for footer

},{"./pages/splash":7,"./pages/albums":8,"./settings":3}],6:[function(require,module,exports){
var circle = m('.circle');
module.exports = {
    controller: function(args){
        // console.log(args)
        this.id = args.id || '';
        // var classes =
        // this.class = classes.join(' ')
        // ability to run function that sets class active
    },
    view: function(ctrl,args){
        return m('.preloader-wrapper', { id: ctrl.id, class: "big active" },[
            m('.spinner-layer.spinner-blue-only',[
                m('.circle-clipper.left',circle),
                m('.gap-patch',circle),
                m('.circle-clipper.right',circle)
            ])
        ]);
    }
}

},{}],7:[function(require,module,exports){
var Services = require('../services');
var Storage = require('../helper').storage;
// var fbLoginComponent = require('../components/fbLogin');

module.exports = {
    //the Todo class has two properties
    controller: function() {},
    view: function() {
        return m('div', {config: parallaxConf},[
            parallaxItem({src: "images/parallax1.jpg"}),
            centerParallaxItem(),
            parallaxItem({src: "images/parallax2.jpg"}),
        ]);
    }
};
var parallaxItem = function(img){
    return m('.parallax-container',[
        m('.parallax',[
            m('img', {src: img.src})
        ])
    ]);
}
var centerParallaxItem = function(){
    return m('#main-splash.section',[
        m('.row',[
            m('.col.offset-l1.l10.s12.white.z-depth-1', [
                m('article', [
                    m('col.l2.m4.s6', [
                        m('img.responsive-img', {src: "http://www.android-kiosk.com/wp-content/themes/MaterialPress-master/images/ic_launcher.png"})
                    ]),
                    m('.splash-content', [
                        m('.col.l10.m8.s12', [
                            fbLoginComponent,
                            m('h4.grey-text.darken-2.light','hehehe')
                        ]),
                        m('.col.l10.m8.s12', [
                            // m.trust('<h4 class="grey-text darken-2 light">Kiosk Browser Lockdown</h4>'),
                            // fbLoginComponent || 'ss'
                            // m.trust('<a class="btn-floating waves-effect waves-light btn-large red"><i class="material-icons">add</i></a>'),
                            // m.trust('<h5 class="grey-text darken-2 light">ProCo Apps</h5>'),
                            // m.trust('<p><a class="waves-effect waves-light btn light-green darken-1" href="https://play.google.com/store/apps/details?id=com.procoit.kioskbrowser" rel="noreferrer"><i class="mdi-av-play-shopping-bag left"></i>Download Free</a>&nbsp;<a class="waves-effect waves-light btn teal" href="https://sites.fastspring.com/androidkiosk/instant/kioskbrowserpro&amp;tags=kioskbrowser" rel="noreferrer"><i class="mdi-action-credit-card left"></i>Buy Pro £5.00*</a><br>'),
                            // m.trust('<span style="font-size: 0.5em;">*Plus tax where applicable</span></p>'),
                            // m.trust('<p class="grey-text darken-3">Kiosk Browser has been designed for use on any android device and is great for creating public kiosks, interactive digital signage etc…. It locks down the user interface so that the end-user isn’t able to adjust Android system settings or gain access to other applications.</p>'),
                            // m.trust('<p class="grey-text darken-3">We are always adding new features, if you need something specific for your project please get in touch.</p>'),
                            // m.trust('<p><a class="waves-effect waves-light btn light-blue darken-3" href="http://www.android-kiosk.com/screenshots" rel="noreferrer"><i class="mdi-image-photo-camera left"></i>Screenshots</a></p>')
                        ])
                    ])
                ])
            ])
        ])
    ]);
}
var parallaxConf = function(el, isInit, context) {
    if (!isInit) {
        $('.parallax').parallax();
    }
};
var fbLoginComponent = {
    controller: function () {
        var error = m.prop('');
        var accessToken = Storage('accessToken');

        // check if Url Has token

        var params = Services.FB.getLoginUrlParams();

        if(params.accessToken){

            console.log('storeaccess');
            accessToken(params.accessToken); // store in local storage
            m.route('/albums');
        }
        else if (params.error){
            error(params.errorDescription) // show error
            console.log('tken error', params);
        }

        return {
            error: error,
            login: Services.FB.invokeLoginDialogue
        }
    },
    view: function (ctrl) {
        var loginBtn = m('.btn-floating.waves-effect.waves-light.btn-large.blue', {onclick: ctrl.login}, [
            m('i.fa.fa-facebook')
        ])
        return m('.btn-fb-login',loginBtn)
    }
}

},{"../services":9,"../helper":10}],8:[function(require,module,exports){
var progressLoader = require('../components/progressLoader');
var albumComponent = require('../components/album');
var Services = require('../services');
var Models = require('../models');
var Page = Models.Page;
var Albums = Models.Albums;

module.exports = {
    //     //the Todo class has two properties
    controller: function() {
        console.log('aaa')
        // var error = m.prop('');
        var page = m.prop({});
        var albums = m.prop([]);
        var albumOpen = m.prop(false);

        var onunload = function(){
            console.log('this unloaded');
        }
        
        var openAlbum = function(id){
            var route = '/album/' + id;

            var currRouteIsSame = m.route() == route;
            // console.log(route,m.route(),currRouteIsSame)

            if(currRouteIsSame){ // just moved in from route change
                ctrl.albumOpen(true);
                // console.log('open:',ctrl.albumOpen());
                // m.redraw(true);
            }
            else m.route(route);
        }

        var currAlbumId = +m.route.param("id"); // convert to integer

        if(!isNaN(currAlbumId)){
            ctrl.openAlbum(currAlbumId);
        }

        Services.FB.checkTokenValid().then(function(valid){
            if(!valid) return Promise.reject('Token Not Valid');

            return Promise.all([
                Page.getDetails(),
                Albums.list()
            ]);
        }).then(function(all){ // set valuse

            page(all[0]);
            albums(all[1]);
        }).then(m.redraw,function(e){

            console.log('error Token Not Valid', e)
            // popup service
            // pop up 'invalid Login token' .. redirect home
            // return m.route('/')
        });

        return {
            page: page, // object
            albums: albums, // array
            albumOpen: albumOpen, // bool
            openAlbum: openAlbum, // function

            // error: error, // string
            onunload: onunload
        }

    },

    view: function(ctrl) {
        // return m.component( progressLoader, {id: 'page-load-progress'});
        return m('.container', [
            !ctrl.albums().length ?  m.component( progressLoader, {id: 'page-load-progress'}) :
            m('.albums-view',[

                m('#album-head', [
                    albumsHead(ctrl.page)
                ]),
                m('#albums-content', [
                    m('h1', "destination"),
                    m('.divider'),
                    m('.albums-items.row', [
                        ctrl.albums().map(function(album){
                            return albumsCard(ctrl.openAlbum,album)
                        }),
                    ])
                ]),
                ctrl.albumOpen() ? m.component(albumComponent, {id:m.route.param("id")}) : ''
            ])
        ]);
    }
};
var albumsHead = function(page){
    return [
        m('h1', page().name),
        m('p', page().description)
    ]
}

var albumsCard = function(onclick,album){
    return m('.col.s12.m6.l3',[
        m('.card-image.waves-effect',{onclick: onclick.bind(onclick,album.id)},[
            m('img.responsive-img',{src: "/images/placeholder.jpg"}), //http://lorempicsum.com/up/400/400/6
            m('span.card-title',album.name)
        ])
    ]);
}

// var ctrlr = this;
// //a running list of todos
// ctrlr.list = new todo.TodoList();
//
// //a slot to store the name of a new todo before it is created
// ctrlr.description = m.prop('');
//
// //adds a todo to the list, and clears the description field for user convenience
// ctrlr.add = function(description) {
//     if (description()) {
//         ctrlr.list.push(new todo.Todo({description: description()}));
//         ctrlr.description("");
//     }
// };

//refactor the binding to a simple helper
// var binds = function(prop) {
//     return {oninput: m.withAttr("value", prop), value: prop()}
// }
//
// //a data store
// var name = m.prop("")
//
// //binding the data store in a view
// m("input", binds(name))

},{"../components/progressLoader":6,"../components/album":2,"../services":9,"../models":11}],10:[function(require,module,exports){
module.exports = {
    Observable:  function() {
        var channels = {}
        return {
            register: function(subscriptions, controller) {
                return function self() {
                    var ctrl = new controller
                    var reload = controller.bind(ctrl)
                    Observable.on(subscriptions, reload)
                    ctrl.onunload = function() {
                        Observable.off(reload)
                    }
                    return ctrl
                }
            },
            on: function(subscriptions, callback) {
                subscriptions.forEach(function(subscription) {
                    if (!channels[subscription]) channels[subscription] = []
                    channels[subscription].push(callback)
                })
            },
            off: function(callback) {
                for (var channel in channels) {
                    var index = channels[channel].indexOf(callback)
                    if (index > -1) channels[channel].splice(index, 1)
                }
            },
            trigger: function(channel, args) {
                // console.log(channel)
                channels[channel].map(function(callback) {
                    callback(args)
                })
            }
        }
    },

    // closure for easy localStorage setting
    storage: function (key) {
        return function(val){
            if(val) localStorage.setItem(key, val);
            return localStorage.getItem(key);
        }
    }

}

},{}],9:[function(require,module,exports){
var settings = require('./settings');
var Storage = require('./helper').storage;
var accessToken = Storage('accessToken');
var userId = Storage('userId');

var fbBaseUrl = "https://www.facebook.com";

module.exports = {
    FB: {
        invokeLoginDialogue: function(){
            var url = fbBaseUrl + "/dialog/oauth?client_id=" + settings.appId +
            "&response_type=code token" +
            "&redirect_uri=" + settings.url;

            console.log(url)

            window.open(url); // replace current url instead of this
        },
        getLoginUrlParams: function(){

            return {
                errorReason: m.route.param("errorReason"),
                errorDescription: m.route.param("errorDesc"),
                error: m.route.param("error"),

                accessToken: m.route.param("accToken"),
                tokenExpiry: m.route.param("exp"),
                code: m.route.param("code")
            }
        },
        checkTokenValid: function(){
            var url = "https://graph.facebook.com/debug_token?input_token=" + accessToken();
            url = url + "&access_token=" + accessToken();
            console.log('check Token', url)

            return m.request({
                method: "GET",
                url: url,
                background: true, // dont affect rendering (Mithril)
                unwrapSuccess: function(response) {
                    return response.data;
                },
                unwrapError: function(response) {
                    return response.error;
                }
            }).then(function(data){
                userId(data.user_id);

                return data.is_valid;
            })
        },

        // next

    }
    // popup service
}

},{"./settings":3,"./helper":10}],11:[function(require,module,exports){
// api key
var settings = require('./settings');
var Storage = require('./helper').storage;
var accessToken = Storage('accessToken');

var graphApiBaseUrl = "https://graph.facebook.com/v2.5";
var graphPageUrl = graphApiBaseUrl + '/815157038515764'

// "?fields=description,name&access_token="

module.exports = {
    Todo: function(data) {
        this.description = m.prop(data.description);
        this.done = m.prop(false);
    },
    TodoList: Array,

    Page: {
        getDetails: function(){
            // return m.request
            var params = '?fields=description,name&access_token=' + accessToken();
            var url = graphPageUrl + params;

            // return m.request({
            //     method: "GET",
            //     url: url,
            //     background: true, // dont affect rendering (Mithril)
            //      // to json cast or not to cast
            //     unwrapError: function(response) {
            //         return response.error;
            //     }
            // });

            return Promise.delay(2000).then(function(){
                return {
                    "description": "ated services r, hotel accommavel experience.",
                    "name": "DMS Travel",
                    "id": "815157038515764",
                };
            });
        }
    },
    // page Albums
    // Album
    Albums: {
        list: function(){
            var list =[];
            for (var i = 0; i < 20; i++) {
                list[i] = {
                    id:i,
                    name: 'blash'
                }
            }
            var params = "?fields=albums{location,name,likes,cover_photo}";


            return Promise.delay(2000).then(function(){return list});

        },
    }

}
var onlyAustralia;


var Alll = {
  "albums": {
    "data": [
      {
        "location": "Brisbane, Australia",
        "name": "Brisbane",
        "likes": {
          "data": [
            {
              "id": "10153375099648773",
              "name": "Brendan Ta"
            },
            {
              "id": "10205274627294212",
              "name": "Thomas Mcdonald"
            },
            {
              "id": "10208230914916443",
              "name": "Gilbert Eaton"
            },
            {
              "id": "10208111836623779",
              "name": "Tim Bosch"
            }
          ],
          "paging": {
            "cursors": {
              "before": "MTAxNTMzNzUwOTk2NDg3NzMZD",
              "after": "MTAyMDgxMTE4MzY2MjM3NzkZD"
            }
          }
        },
        "cover_photo": {
          "created_time": "2014-08-28T05:54:13+0000",
          "name": "Brisbane city",
          "id": "816505061714295"
        },
        "id": "816520808379387"
      },
      {
        "location": "Gold Coast, Queensland, Australia",
        "name": "Gold Coast",
        "likes": {
          "data": [
            {
              "id": "10208230914916443",
              "name": "Gilbert Eaton"
            },
            {
              "id": "10208111836623779",
              "name": "Tim Bosch"
            }
          ],
          "paging": {
            "cursors": {
              "before": "MTAyMDgyMzA5MTQ5MTY0NDMZD",
              "after": "MTAyMDgxMTE4MzY2MjM3NzkZD"
            }
          }
        },
        "cover_photo": {
          "created_time": "2014-08-28T07:00:32+0000",
          "name": "Gold Coast convention center",
          "id": "816516625046472"
        },
        "id": "816504545047680"
      },
      {
        "location": "Passau, Germany",
        "name": "Passau",
        "likes": {
          "data": [
            {
              "id": "10207578300633201",
              "name": "Katie Stevens"
            },
            {
              "id": "10208230914916443",
              "name": "Gilbert Eaton"
            },
            {
              "id": "10207595544106887",
              "name": "Mitchell Ryan"
            },
            {
              "id": "10208111836623779",
              "name": "Tim Bosch"
            },
            {
              "id": "893560167398789",
              "name": "Wade Murnane"
            },
            {
              "id": "498024660359274",
              "name": "Jack Cuthbert"
            },
            {
              "id": "10153427835262639",
              "name": "Emily Bennett"
            }
          ],
          "paging": {
            "cursors": {
              "before": "MTAyMDc1NzgzMDA2MzMyMDEZD",
              "after": "MTAxNTM0Mjc4MzUyNjI2MzkZD"
            }
          }
        },
        "cover_photo": {
          "created_time": "2014-10-13T07:26:38+0000",
          "id": "842061055825362"
        },
        "id": "842060912492043"
      },
      {
        "name": "Profile Pictures",
        "cover_photo": {
          "created_time": "2014-09-10T00:07:27+0000",
          "id": "823234951041306"
        },
        "id": "823234927707975"
      },
      {
        "name": "Cover Photos",
        "likes": {
          "data": [
            {
              "id": "10207578300633201",
              "name": "Katie Stevens"
            },
            {
              "id": "10208230914916443",
              "name": "Gilbert Eaton"
            }
          ],
          "paging": {
            "cursors": {
              "before": "MTAyMDc1NzgzMDA2MzMyMDEZD",
              "after": "MTAyMDgyMzA5MTQ5MTY0NDMZD"
            }
          }
        },
        "cover_photo": {
          "created_time": "2014-09-03T06:48:29+0000",
          "id": "819310518100416"
        },
        "id": "819310544767080"
      },
      {
        "location": "Noosa, Queensland, Australia",
        "name": "Noosa",
        "likes": {
          "data": [
            {
              "id": "10208230914916443",
              "name": "Gilbert Eaton"
            },
            {
              "id": "10208111836623779",
              "name": "Tim Bosch"
            }
          ],
          "paging": {
            "cursors": {
              "before": "MTAyMDgyMzA5MTQ5MTY0NDMZD",
              "after": "MTAyMDgxMTE4MzY2MjM3NzkZD"
            }
          }
        },
        "cover_photo": {
          "created_time": "2014-08-28T05:45:59+0000",
          "name": "Noosa, view from a lookout",
          "id": "816503508381117"
        },
        "id": "816503235047811"
      },
      {
        "location": "Heron Island, Queensland, Australia",
        "name": "Heron Island",
        "likes": {
          "data": [
            {
              "id": "815157038515764",
              "name": "DMS Travel"
            },
            {
              "id": "10208230914916443",
              "name": "Gilbert Eaton"
            },
            {
              "id": "890221034365486",
              "name": "Darryl Daz"
            }
          ],
          "paging": {
            "cursors": {
              "before": "ODE1MTU3MDM4NTE1NzY0",
              "after": "ODkwMjIxMDM0MzY1NDg2"
            }
          }
        },
        "cover_photo": {
          "created_time": "2014-08-28T06:09:47+0000",
          "name": "Low tide",
          "id": "816508201713981"
        },
        "id": "816508098380658"
      }
    ],
    "paging": {
      "cursors": {
        "before": "ODE2NTIwODA4Mzc5Mzg3",
        "after": "ODE2NTA4MDk4MzgwNjU4"
      }
    }
  },
  "id": "815157038515764",
};

},{"./settings":3,"./helper":10}]},{},[1])
;