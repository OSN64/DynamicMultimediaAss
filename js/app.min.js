;(function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require=="function"&&require;if(!s&&o)return o(n,!0);if(r)return r(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=t[n]={exports:{}};e[n][0](function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require=="function"&&require;for(var s=0;s<n.length;s++)i(n[s]);return i})({1:[function(require,module,exports){
// domready
$( document ).ready(function(){
    var router = require('./router').init();
    var navbars = require('./components/navbars');
    // router.init();
    // m.route.mode = "hash";
    // m.route(document.getElementsByClassName('main-container')[0] , '/', router.routes);
    // m.route('/')

    m.mount(document.getElementsByTagName('header')[0],navbars)
});

},{"./router":2,"./components/navbars":3}],3:[function(require,module,exports){
// Header component
var sideLinks = [
    {title: "Home", url: "#/"},
    {title: "Albums", url: "#/albums"},
    {title: "Documentation", url: "#/doc"},
    {title: "About", url: "#/about"},
    {title: "gett2", url: "#/album/2"},
];
// m("li", {class: selected ? "active" : ""})
module.exports = {
    controller: function() {},
    view: function(ctrl) {
        return m('nav', {config: navConf}, m('.nav-wrapper', [
            m('a', { href: '#!', class: 'brand-logo center' }, 'logo'),

            m('a', { href: '#', class: 'button-collapse', 'data-activates': 'mobile-demo' }, m('i', { class: 'material-icon' }, 'menu') ),

            m('ul', { class: 'right hide-on-med-and-down'}, [
                m('li', m('a',{ href: '#/tobe' }) )
            ]),

            m('ul#mobile-demo', { class: 'side-nav fixed'},[
                sideLinks.map(function(link) {
                    return m('li', m('a', {href: link.url}, link.title));
                })
            ])
        ]));
    }
}

var navConf = function(element, isInitialized, context) {
    if (!isInitialized) {
        $('.button-collapse').sideNav({
            'edge': 'left',
            // closeOnClick: true
        });
    }
};

},{}],2:[function(require,module,exports){
var splashPage = require('./pages/splash');
var albumsPage = require('./pages/albums');
var Albums = require('./models/albums');
var animateNextRoute = require('./animations').animateNextRoute;

var pageContainer = $('main')[0];
var routes = {
    '/': function(){
        // servise check if logged in
        // servise get cover img
        animateNextRoute([])
        .then(function(data){
            console.log(data);
            m.mount($('main')[0],splashPage);
        });
    },
    '/albums': function(){

        animateNextRoute([
            Albums.list()
        ]).spread(function(albums){

            var inject = {
                albums: albums
            }

            $('main').html($('<div class="main-container container">'))

            m.mount($('.main-container')[0], m.component(albumsPage,inject));
        });
    },
    '/album/:id': function(id){
        console.log(id)
    },
    '/about': function(){
        // animateNextRoute([3])
        // .spread(function(num){
        //     var inject = {}
        //
        //     $('main').html($('<div class="main-container container">'));
        //
        //     m.mount( $('.main-container')[0], m.component( albumsPage, inject ) );
        // });
    }
};
var router = Router(routes);
module.exports = {
    //
    init: function(){
        router.init('/');
        return router;
    }
}

},{"./pages/splash":4,"./pages/albums":5,"./models/albums":6,"./animations":7}],4:[function(require,module,exports){

module.exports = {
    //the Todo class has two properties
    controller: function() {},
    view: function() {
        return m('div', {config: parallaxConf},[
            parallaxItem({src: "images/parallax1.jpg"}),
            centerParallaxItem(),
            parallaxItem({src: "images/parallax2.jpg"}),
        ]);
    }
};
var parallaxItem = function(img){
    return m('.parallax-container',[
        m('.parallax',[
            m('img', {src: img.src})
        ])
    ]);
}
var centerParallaxItem = function(){
    return m('#main-splash.section',[
        m('.row',[
            m('.col.offset-l1.l10.s12.white.z-depth-1', [
                m('article', [
                    m('col.l2.m4.s6', [
                        m('img.responsive-img', {src: "http://www.android-kiosk.com/wp-content/themes/MaterialPress-master/images/ic_launcher.png"})
                    ]),
                    m('.splash-content', [
                        m('.col.l10.m8.s12', [
                            m.trust('<h4 class="grey-text darken-2 light">Kiosk Browser Lockdown</h4>'),
                            m.trust('<h5 class="grey-text darken-2 light">ProCo Apps</h5>'),
                            m.trust('<p><a class="waves-effect waves-light btn light-green darken-1" href="https://play.google.com/store/apps/details?id=com.procoit.kioskbrowser" rel="noreferrer"><i class="mdi-av-play-shopping-bag left"></i>Download Free</a>&nbsp;<a class="waves-effect waves-light btn teal" href="https://sites.fastspring.com/androidkiosk/instant/kioskbrowserpro&amp;tags=kioskbrowser" rel="noreferrer"><i class="mdi-action-credit-card left"></i>Buy Pro £5.00*</a><br>'),
                            m.trust('<span style="font-size: 0.5em;">*Plus tax where applicable</span></p>'),
                            m.trust('<p class="grey-text darken-3">Kiosk Browser has been designed for use on any android device and is great for creating public kiosks, interactive digital signage etc…. It locks down the user interface so that the end-user isn’t able to adjust Android system settings or gain access to other applications.</p>'),
                            m.trust('<p class="grey-text darken-3">We are always adding new features, if you need something specific for your project please get in touch.</p>'),
                            m.trust('<p><a class="waves-effect waves-light btn light-blue darken-3" href="http://www.android-kiosk.com/screenshots" rel="noreferrer"><i class="mdi-image-photo-camera left"></i>Screenshots</a></p>')
                        ])
                    ])
                ])
            ])
        ])
    ]);
}
var parallaxConf = function(el, isInit, context) {
    if (!isInit) {
        $('.parallax').parallax();
    }
};

},{}],6:[function(require,module,exports){
// api key
module.exports = {
    Todo: function(data) {
        this.description = m.prop(data.description);
        this.done = m.prop(false);
    },
    TodoList: Array,
    list: function(){
        var list =[];
        for (var i = 0; i < 20; i++) {
            list[i] = {
                id:i,
                name: 'blash'
            }
        }
        return Promise.resolve(list);
    }
}
// console.log(this)

},{}],7:[function(require,module,exports){
var progressLoader = require('./components/progressLoader');

module.exports = {
    animateNextRoute: function(promises,cb){
        // start progress
        $('main').html('');
        var pageContainer = $('main')[0];;

        $('main').fadeOut('fast',function(){
            m.mount(pageContainer,m.component( progressLoader, {id: 'page-load-progress'} ));

            $('main').fadeIn('fast')
        })

        promises.push(Promise.delay(2000));

        return Promise.all(promises)
        .then(function(data){

            $('main').hide();
            $('main').fadeIn('slow');

            m.mount(pageContainer,null);
            data.pop();

            return data;
        });
    }
}

},{"./components/progressLoader":8}],5:[function(require,module,exports){
var albumComponent = require('../components/album');

module.exports = {
    //the Todo class has two properties
    controller: function(args) {
        console.log(args);
        var ctrl = this;
        ctrl.albums = args.albums;

        ctrl.albumOpened = m.prop(false);
        ctrl.album = {
            current: m.prop(0)
        };

        ctrl.openAlbum = function(albumId){
            // console.log('Open album',albumId);
            ctrl.album.current = albumId;
            ctrl.albumOpened(true);
            // mount and initalise album component
            m.mount($('footer')[0],m.component(albumComponent,ctrl.album));
        }
        // if (args.albumId) { // lodash if not undefined
        // ctrl.openAlbum(args.albumId)
        // ctrl.openAlbum(1)
        // }
    },
    view: function(ctrl,args) {
        return m('.albums-view',[
            m('#album-head', [
                m('h1', "titile"),
                m('p', "desctript")
            ]),
            m('#albums-content', [
                m('h1', "destination"),
                m('.divider'),
                m('.albums-items.row', [
                    ctrl.albums.map(function(album){
                        return albumsCard(ctrl.openAlbum,album)
                    }),
                    // ctrl.albumOpened() ? m.component(albumComponent,ctrl.album) : ''
                ])
            ]),
        ]);
    }
};

var albumsCard = function(onclick,album){
    return m('.col.s12.m6.l3',[
        m('.card-image.waves-effect',{onclick: onclick.bind(onclick,album.id)},[
            m('img.responsive-img',{src: "http://lorempicsum.com/up/400/400/6"}),
            m('span.card-title',album.name)
        ])
    ]);
}

// var ctrlr = this;
// //a running list of todos
// ctrlr.list = new todo.TodoList();
//
// //a slot to store the name of a new todo before it is created
// ctrlr.description = m.prop('');
//
// //adds a todo to the list, and clears the description field for user convenience
// ctrlr.add = function(description) {
//     if (description()) {
//         ctrlr.list.push(new todo.Todo({description: description()}));
//         ctrlr.description("");
//     }
// };

//refactor the binding to a simple helper
// var binds = function(prop) {
//     return {oninput: m.withAttr("value", prop), value: prop()}
// }
//
// //a data store
// var name = m.prop("")
//
// //binding the data store in a view
// m("input", binds(name))

},{"../components/album":9}],8:[function(require,module,exports){
var circle = m('.circle');
module.exports = {
    controller: function(args){
        // console.log(args)
        this.id = args.id || '';
        // var classes =
        // this.class = classes.join(' ')
        // ability to run function that sets class active
    },
    view: function(ctrl,args){
        return m('.preloader-wrapper', { id: ctrl.id, class: "big active" },[
            m('.spinner-layer.spinner-blue-only',[
                m('.circle-clipper.left',circle),
                m('.gap-patch',circle),
                m('.circle-clipper.right',circle)
            ])
        ]);
    }
}

},{}],9:[function(require,module,exports){
var progressLoader = require('../components/progressLoader');

module.exports = {
    //the Todo class has two properties
    controller: function(args) {
        var ctrl = this;
        ctrl.id = args.current;
        // ctrl.album = m.prop({});
        ctrl.imgs = m.prop([]);
        ctrl.error = '';

        ctrl.getAlbum = function(id){
            console.log('leng',ctrl.imgs().length);
            // request
            return Promise.delay(3000).then(function(){
                return {
                    imgs: [
                        {src:'kk.img'}
                    ],
                    name: 'bleejee'
                };
            }).then(function(data){
                // set album variable
                return data.imgs
            }).then(ctrl.imgs)//  set as img
            .then(function(images){
                console.log(images)
                if(_.isEmpty(images))
                    ctrl.error = 'No images were found';
                console.log('leng',ctrl.imgs().length);
            }).then(m.redraw);
        }
        ctrl.getAlbum(ctrl.id)
    },
    view: function(ctrl,args) {
        // if (ctrl.invalidId) return m('div');
        // loading
        return m('.album-modal', {class: "modal modal-fixed-footer", config:modalOpen}, [
            m('.modal-content',[
                m('h4',"Modal Header"),
                m('p',"A bunch of text"),
                m('p',ctrl.id),
                function checkState(){
                    if (!_.isEmpty(ctrl.error)) return errorView(ctrl.error);
                    // image view
                    else if (!_.isEmpty(ctrl.imgs())) return imgsView(ctrl.imgs);
                    // animated progress icon
                    else return m.component( progressLoader, {id: 'album-load-progress'} );
                }(),
            ]),
            m('.modal-footer',[
                m('button',{class: "modal-action modal-close waves-effect waves-green btn-flat"}, "Agree")
            ])
        ]);
    }
};
// seperate thumbTocomponent

var imgsView = function(images){
    console.log('image view',images());
    // row col 3
    // each thumb - desc, like count, like btn
    // config to top fade in
    return m('h1','images');
}
var modalOpen = function(element, isInitialized, context) {
    if (!isInitialized) {
        $(element).openModal();
        console.log('open',element,context)
    }
    // $('.album-modal').closeModal();
};
// row columns
var imageCard = function(){
    return



}
var errorView = function(error){
    return m('h2', error)
}

},{"../components/progressLoader":8}]},{},[1])
;