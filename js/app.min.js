;(function(e,t,n){function i(n,s){if(!t[n]){if(!e[n]){var o=typeof require=="function"&&require;if(!s&&o)return o(n,!0);if(r)return r(n,!0);throw new Error("Cannot find module '"+n+"'")}var u=t[n]={exports:{}};e[n][0](function(t){var r=e[n][1][t];return i(r?r:t)},u,u.exports)}return t[n].exports}var r=typeof require=="function"&&require;for(var s=0;s<n.length;s++)i(n[s]);return i})({1:[function(require,module,exports){
// domready
$( document ).ready(function(){
    // window.Observable = require('./helper').Observable.call(); // event systsem

    var navbars = require('./components/navbars');
    var albumComponent = require('./components/album');
    require('./settings');
    // router.init();
    // m.route.mode = "hash";
    // m.route(document.getElementsByClassName('main-container')[0] , '/', router.routes);
    // m.route('/')
    // var ss = {
    //     view: function(){
    //         return m('rr',{config:function(el,isInit,context){
    //             console.log('rr,', el,isInit,context)
    //         }})
    //     }
    // }
    // m.mount(document.getElementsByTagName('header')[0],ss);
    var router = require('./router');
    m.mount(document.getElementsByTagName('header')[0], navbars);

    // m.mount($('footer')[0],albumComponent);

    // router.init();


    //initialize
    // m.mount(document.getElementsByTagName('header')[0], Demo);

});

},{"./components/navbars":2,"./components/album":3,"./settings":4,"./router":5}],2:[function(require,module,exports){
// Header component
var sideLinks = [
    {title: "Home", url: "#/"},
    {title: "Albums", url: "#/albums"},
    {title: "Documentation", url: "#/doc"},
    {title: "About", url: "#/about"},
    {title: "gett2", url: "#/album/2"},
];
// m("li", {class: selected ? "active" : ""})
module.exports = {
    controller: function() {
        m.redraw.strategy("diff");
    },
    view: function(ctrl) {
        // console.log('dont')
        // m.redraw.strategy("none");
        return m('nav', {config: navConf}, m('.nav-wrapper', [
            m('a', { href: '#!', class: 'brand-logo center' }, 'logo'),

            m('a', { href: '#', class: 'button-collapse', 'data-activates': 'mobile-demo' }, m('i', { class: 'material-icon' }, 'menu') ),

            m('ul', { class: 'right hide-on-med-and-down'}, [
                m('li', m('a',{ href: '#/tobe' }) )
            ]),

            m('ul#mobile-demo', { class: 'side-nav fixed'},[
                sideLinks.map(function(link) {
                    return m('li', m('a', {href: link.url}, link.title));
                })
            ])
        ]));
    }
}

var navConf = function(element, isInitialized, context) {
    if (!isInitialized) {
        $('.button-collapse').sideNav({
            'edge': 'left',
            // closeOnClick: true
        });
    }


};

},{}],4:[function(require,module,exports){
var app = window.app = {};


app.appId = "";

app.url = "http://nigga.linuxx.org:50/";

app.loginRedirectRoute = "/"
app.urlLoginRedirect = app.url + '#/' + app.loginRedirectRoute

// not exporting anything
module.exports = {}

},{}],5:[function(require,module,exports){
var splashPage = require('./pages/splash');
var albumsPage = require('./pages/albums');

var albumComponent = require('./components/album');
// var animateNextRoute = require('./animations').animateNextRoute;

// var albumsRoute = function(){
//
//     return animateNextRoute([
//         Albums.list(),
//         // getPageName
//     ]).spread(function(albums){
//
//         // $('main').html($('<div class="main-container container">'));
//
//         var inject = {
//             albums: albums
//         };
//         m.redraw.strategy("none");
//         m.mount($('main')[0], {
//             view: function(){
//                 return m('container')
//             }
//         })
//
//         // return m.mount($('.main-container')[0], m.component(albumsPage,inject));
//     });
// }
// var routes = {
//     '/': function(){
//         // servise check if logged in
//         // servise get cover img
//         animateNextRoute([])
//         .then(function(data){
//             // console.log(data);
//             // m.mount($('main')[0],splashPage);
//         });
//     },
//     // '/albums': albumsRoute,
//     '/album/:id': function(id){
//         Promise.resolve($('.main-container')[0])
//         .then(function(albumsView){
//
//             if (!albumsView){ // if there is no view
//                 return albumsRoute();
//             }
//
//             return;
//         }).then(function(){
//
//             if ( !isNaN(id) ) { // lodash if not undefined
//
//                 var album = {
//                     id: id
//                 };
//                 // console.log('who');
//                 // event
//                 // window.Observable.trigger('openAlbum',album)
//                 // return m.mount($('footer')[0],m.component(albumComponent,album));
//             }
//         });
//     },
//     '/about': function(){}
// };
var albumComponent = require('./components/album');
// function aroundContainer (component){
//     return {
//         // controller: function () {
//         // },
//         view: function () {
//             // m.redraw.strategy("none");
//             console.log('wtf');
//             return m('.main-container.container',[m.component(component)])
//         }
//     }
// }
m.route.mode = "hash";
m.route( $('main')[0], '/', {
    '/' : splashPage,

    '/albums' : albumsPage,
    '/album/:id' : albumsPage,
    // '/route3' : slidingPage( page3 )
});



// another router for footer

// var router = Router(routes);
// module.exports = {
//     //
//     init: function(){
//         router.init('/');
//         return router;
//     }
// }

},{"./pages/splash":6,"./pages/albums":7,"./components/album":3}],3:[function(require,module,exports){
var progressLoader = require('../components/progressLoader');

module.exports = {
    //the Todo class has two properties

    controller: function(args) {
        args = args || {};
        var ctrl = this;
        ctrl.album = m.prop({});
        ctrl.imgs = m.prop([]);
        // ctrl.modalOpen = m.prop(false);
        ctrl.error = m.prop('');

        ctrl.id = args.id;
        // m.redraw.strategy("none");

        ctrl.openAlbum = function(id){
            // $('.album-modal').openModal();
            // ctrl.modalOpen(true);
            // m.redraw(true);
            // console.log('in redraw')
            console.log('leng',ctrl.imgs().length);
            // request
            Promise.delay(1000).then(function(){
                return {
                    imgs: [
                        {src:'kk.img'}
                    ],
                    name: 'bleejee'
                };
            }).then(function(data){
                // set album variable
                return data.imgs
            }).then(ctrl.imgs)//  set as img
            .then(function(images){
                // console.log(images)
                if(!images.length)
                    ctrl.error( 'No images were found');
                // console.log('leng',ctrl.imgs().length);
                console.log('redraw')
            }).then(m.redraw);
        }
        // window.Observable.on(["openAlbum"],function(e){
        //     console.log('openenen: ' , e);
        //     ctrl.imgs([
        //         {src:'kk.img'}
        //     ])
        //     m.redraw(1)
        //     // ctrl.openAlbum(e.id);
        // })
        // ctrl.onunload = function(){
        //     Observable.off(ctrl.openAlbum) // stop listening
        //     console.log('unloading')
        // }
        // if(!args) return ctrl.error(' No Id Specified');

        // return {}
        ctrl.openAlbum(ctrl.id)

    },
    view: function(ctrl,args) {
        // loading
        console.log('state change',ctrl);
        // console.log($('.album-modal').html())
        return m('.album-modal', {class: "modal modal-fixed-footer", config:modalOpen}, [
            m('.modal-content',[
                m('h4',"Modal Header"),
                m('p',"A bunch of text"),
                m('p',ctrl.id),
                function checkState(){
                    console.log('stt',ctrl.error())
                    // console.log('state',ctrl.error)
                    if (ctrl.error()) return errorView(ctrl.error);
                    // image view
                    else if (ctrl.imgs().length) return imgsView(ctrl.imgs);
                    // animated progress icon
                    else return m.component( progressLoader, {id: 'album-load-progress'} );
                }(),
            ]),
            m('.modal-footer',[
                m('button',{class: "modal-action modal-close waves-effect waves-green btn-flat"}, "Agree")
            ])
        ]);
    }
};
// // seperate thumbTocomponent
//
var imgsView = function(images){
    // console.log('image view',images());
    // row col 3
    // each thumb - desc, like count, like btn
    // config to top fade in
    // config hide then fade in slow
    return m('h1','images');
}
var modalOpen = function(element, isInitialized, context) {
        // console.log('open modal',canOpen(),element, isInitialized, context)
    if (!isInitialized) {
      // use different modal library
      // remove all events listeneing
    //   Observable.off(["openAlbumModal"],openModal.bind(null,element));
    //   Observable.on(["openAlbumModal"],openModal.bind(null,element));
    console.log('opened')

        $(element).openModal();
      function openModal(el){
      }
        // console.log('open',element,context)
    }
    // $('.album-modal').closeModal();
};
// // row columns
// var imageCard = function(){
//     return
//
//
//
// }
var errorView = function(error){
    return m('h2', error)
}

},{"../components/progressLoader":8}],8:[function(require,module,exports){
var circle = m('.circle');
module.exports = {
    controller: function(args){
        // console.log(args)
        this.id = args.id || '';
        // var classes =
        // this.class = classes.join(' ')
        // ability to run function that sets class active
    },
    view: function(ctrl,args){
        return m('.preloader-wrapper', { id: ctrl.id, class: "big active" },[
            m('.spinner-layer.spinner-blue-only',[
                m('.circle-clipper.left',circle),
                m('.gap-patch',circle),
                m('.circle-clipper.right',circle)
            ])
        ]);
    }
}

},{}],6:[function(require,module,exports){
var Services = require('../services');
module.exports = {
    //the Todo class has two properties
    controller: function() {},
    view: function() {
        return m('div', {config: parallaxConf},[
            parallaxItem({src: "images/parallax1.jpg"}),
            centerParallaxItem(),
            parallaxItem({src: "images/parallax2.jpg"}),
        ]);
    }
};
var parallaxItem = function(img){
    return m('.parallax-container',[
        m('.parallax',[
            m('img', {src: img.src})
        ])
    ]);
}
var centerParallaxItem = function(){
    return m('#main-splash.section',[
        m('.row',[
            m('.col.offset-l1.l10.s12.white.z-depth-1', [
                m('article', [
                    m('col.l2.m4.s6', [
                        m('img.responsive-img', {src: "http://www.android-kiosk.com/wp-content/themes/MaterialPress-master/images/ic_launcher.png"})
                    ]),
                    m('.splash-content', [
                        m('.col.l10.m8.s12', [
                            fbLoginComponent,
                            m('h4.grey-text.darken-2.light','hehehe')
                        ]),
                        m('.col.l10.m8.s12', [
                            // m.trust('<h4 class="grey-text darken-2 light">Kiosk Browser Lockdown</h4>'),
                            // fbLoginComponent || 'ss'
                            // m.trust('<a class="btn-floating waves-effect waves-light btn-large red"><i class="material-icons">add</i></a>'),
                            // m.trust('<h5 class="grey-text darken-2 light">ProCo Apps</h5>'),
                            // m.trust('<p><a class="waves-effect waves-light btn light-green darken-1" href="https://play.google.com/store/apps/details?id=com.procoit.kioskbrowser" rel="noreferrer"><i class="mdi-av-play-shopping-bag left"></i>Download Free</a>&nbsp;<a class="waves-effect waves-light btn teal" href="https://sites.fastspring.com/androidkiosk/instant/kioskbrowserpro&amp;tags=kioskbrowser" rel="noreferrer"><i class="mdi-action-credit-card left"></i>Buy Pro £5.00*</a><br>'),
                            // m.trust('<span style="font-size: 0.5em;">*Plus tax where applicable</span></p>'),
                            // m.trust('<p class="grey-text darken-3">Kiosk Browser has been designed for use on any android device and is great for creating public kiosks, interactive digital signage etc…. It locks down the user interface so that the end-user isn’t able to adjust Android system settings or gain access to other applications.</p>'),
                            // m.trust('<p class="grey-text darken-3">We are always adding new features, if you need something specific for your project please get in touch.</p>'),
                            // m.trust('<p><a class="waves-effect waves-light btn light-blue darken-3" href="http://www.android-kiosk.com/screenshots" rel="noreferrer"><i class="mdi-image-photo-camera left"></i>Screenshots</a></p>')
                        ])
                    ])
                ])
            ])
        ])
    ]);
}
var parallaxConf = function(el, isInit, context) {
    if (!isInit) {
        $('.parallax').parallax();
    }
};
var fbLoginComponent = {
    controller: function () {
        function login(){
            Services.FB.invokeLoginDialogue()
        }
        return {
            login:login
        }
    },
    view: function (ctrl) {
        var loginBtn = m('.btn-floating.waves-effect.waves-light.btn-large.blue', {onclick: ctrl.login}, [
            m('i.fa.fa-facebook')
        ])
        return m('.btn-fb-login',loginBtn)
    }
}

},{"../services":9}],7:[function(require,module,exports){
//
// var router = Router();
//
var progressLoader = require('../components/progressLoader');
var Albums = require('../models/albums');
var albumComponent = require('../components/album');
module.exports = {
    //     //the Todo class has two properties
    controller: function() {
        console.log('aaa')
        var ctrl = this;
        ctrl.albums = m.prop([]);
        ctrl.albumOpen = m.prop(false);

        // m.component( progressLoader, {id: 'page-load-progress'})
        ctrl.onunload = function(){
            console.log('this unloaded');
        }
        ctrl.openAlbum = function(id){
            var route = '/album/' + id;
            // var currRoute = router.getRoute().join('/');

            var currRouteIsSame = m.route() == route;
            console.log(route,m.route(),currRouteIsSame)

            if(currRouteIsSame){ // just moved in from route change
                ctrl.albumOpen(true);
                // console.log('open:',ctrl.albumOpen());
                // m.redraw(true);
            }
            else m.route(route);
            // if (goToRoute == currRoute){
            //     // move bellow lines to mount album funt helper
            //     var album = {
            //         id: albumId
            //     };
            //     // return ;
            //
            // } else return router.setRoute(route);

        }

        var currAlbumId = +m.route.param("id"); // convert to integer

        if(!isNaN(currAlbumId)){
            ctrl.openAlbum(currAlbumId);
        }
        Albums.list()
        .then(ctrl.albums)
        .then(m.redraw);

    },
    view: function(ctrl) {
        // return m.component( progressLoader, {id: 'page-load-progress'});
        return m('.container', [
            !ctrl.albums().length ?  m.component( progressLoader, {id: 'page-load-progress'}) :
            m('.albums-view',[

                m('#album-head', [
                    albumsHead()
                ]),
                m('#albums-content', [
                    m('h1', "destination"),
                    m('.divider'),
                    m('.albums-items.row', [
                        ctrl.albums().map(function(album){
                            return albumsCard(ctrl.openAlbum,album)
                        }),
                    ])
                ]),
                ctrl.albumOpen() ? m.component(albumComponent, {id:m.route.param("id")}) : ''
            ])
        ]);
    }
};
var albumsHead = function(){
    // ge descript
    return [
        m('h1', "titile"),
        m('p', "desctript")
    ]
}

var albumsCard = function(onclick,album){
    return m('.col.s12.m6.l3',[
        m('.card-image.waves-effect',{onclick: onclick.bind(onclick,album.id)},[
            m('img.responsive-img',{src: "/images/placeholder.jpg"}), //http://lorempicsum.com/up/400/400/6
            m('span.card-title',album.name)
        ])
    ]);
}

// var ctrlr = this;
// //a running list of todos
// ctrlr.list = new todo.TodoList();
//
// //a slot to store the name of a new todo before it is created
// ctrlr.description = m.prop('');
//
// //adds a todo to the list, and clears the description field for user convenience
// ctrlr.add = function(description) {
//     if (description()) {
//         ctrlr.list.push(new todo.Todo({description: description()}));
//         ctrlr.description("");
//     }
// };

//refactor the binding to a simple helper
// var binds = function(prop) {
//     return {oninput: m.withAttr("value", prop), value: prop()}
// }
//
// //a data store
// var name = m.prop("")
//
// //binding the data store in a view
// m("input", binds(name))

},{"../components/progressLoader":8,"../models/albums":10,"../components/album":3}],10:[function(require,module,exports){
// api key
module.exports = {
    Todo: function(data) {
        this.description = m.prop(data.description);
        this.done = m.prop(false);
    },
    TodoList: Array,
    list: function(){
        var list =[];
        for (var i = 0; i < 20; i++) {
            list[i] = {
                id:i,
                name: 'blash'
            }
        }
        return Promise.delay(2000).then(function(){return list});
    }
}
// console.log(this)

},{}],9:[function(require,module,exports){
var settings = window.app;
module.exports = {
    FB: {
        invokeLoginDialogue: function(){
            var url = "https://www.facebook.com/dialog/oauth?client_id=" + settings.appId + "&redirect_uri=" + settings.urlLoginRedirect
            window.open(url);
        }
    }
}

},{}]},{},[1])
;